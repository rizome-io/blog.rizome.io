{"version":3,"file":"component---plugins-gatsby-theme-orga-posts-core-src-templates-post-query-js-ee5a62eddd4e04210c65.js","mappings":"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","sources":["webpack://blog.rizome.io/./plugins/gatsby-theme-orga-posts/src/components/avatar.tsx","webpack://blog.rizome.io/./src/gatsby-theme-orga-posts/components/bio-content.tsx","webpack://blog.rizome.io/./plugins/gatsby-theme-orga-posts/src/components/social-links.tsx","webpack://blog.rizome.io/./plugins/gatsby-theme-orga-posts/src/components/bio.tsx","webpack://blog.rizome.io/./plugins/gatsby-theme-orga-posts/src/components/html.tsx","webpack://blog.rizome.io/./plugins/gatsby-theme-orga-posts/src/components/post-meta.tsx","webpack://blog.rizome.io/./plugins/gatsby-theme-orga-posts/src/components/post-hero.tsx","webpack://blog.rizome.io/./plugins/gatsby-theme-orga-posts/src/components/post-title.tsx","webpack://blog.rizome.io/./plugins/gatsby-theme-orga-posts-core/src/templates/post-query.js","webpack://blog.rizome.io/./plugins/gatsby-theme-orga-posts/src/components/post.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport { jsx } from 'theme-ui'\n\nexport default ({ width = [80, 120] }) => {\n  const { avatar } = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/avatar.(jpeg|jpg|gif|png)/\" }) {\n        childImageSharp {\n          gatsbyImageData(width: 120, height: 120, layout: CONSTRAINED)\n        }\n      }\n    }\n  `)\n\n  return (\n    <GatsbyImage\n      image={getImage(avatar)}\n      alt={''}\n      sx={{\n        width,\n        borderRadius: '50%',\n        borderWidth: 1,\n        borderStyle: 'solid',\n        borderColor: 'text',\n        boxShadow: '0 4px 8px 0 rgba(0,0,0,0.2)',\n        transition: '0.3s',\n        '&:hover': {\n          transform: 'scale(1.1)',\n        },\n      }}\n    />\n  )\n}\n","import React, { Fragment } from 'react'\n\n/**\n * Shadow me to add your own bio content\n */\n\nexport default () => (\n  <Fragment>\n    Words by <a href=\"http://rizome.io/\">rizome.io team</a>.\n    <br />\n    We strive for best quality content. <br />If you found inconsistencies or\n    having doubts about the content - <br />don't hesitate to report via links below.\n  </Fragment>\n)\n","/** @jsx jsx */\nimport {\n  FaEnvelope as EmailIcon,\n  FaGithub as GithubIcon,\n  FaGlobe as WebsiteIcon,\n  FaTwitter as TwitterIcon,\n} from 'react-icons/fa'\nimport { Flex, IconButton, jsx, Text } from 'theme-ui'\nimport { useSiteMetadata } from '../hooks'\n\nexport default () => {\n  const { social } = useSiteMetadata()\n\n  const getIcon = (name: string) => {\n    switch (name.toLowerCase()) {\n      case 'twitter':\n        return <TwitterIcon size=\"1.5em\" />\n      case 'email':\n        return <EmailIcon size=\"1.5em\" />\n      case 'github':\n        return <GithubIcon size=\"1.5em\" />\n      case 'website':\n        return <WebsiteIcon size=\"1.5em\" />\n      default:\n        return <Text>{name}</Text>\n    }\n  }\n\n  return (\n    <Flex>\n      {social.map(({ name, url }) => (\n        <a key={`social-${name}`} href={url}>\n          <IconButton\n            sx={{\n              mx: 1,\n              '&:hover': { bg: 'highlight' },\n            }}\n          >\n            {getIcon(name)}\n          </IconButton>\n        </a>\n      ))}\n    </Flex>\n  )\n}\n","/** @jsx jsx */\nimport { Box, Flex, jsx } from 'theme-ui'\nimport Avatar from './avatar'\nimport BioContent from './bio-content'\nimport SocialLinks from './social-links'\n\nexport default () => {\n  return (\n    <Flex>\n      <Box sx={{ p: 2, flex: '0 0 auto', justifyContent: 'flex-start' }}>\n        <Avatar />\n      </Box>\n      <Flex sx={{ flexDirection: 'column' }}>\n        <div>\n          <BioContent />\n        </div>\n        <SocialLinks />\n      </Flex>\n    </Flex>\n  )\n}\n","/** @jsx jsx */\nimport { jsx, Box } from 'theme-ui'\n\nexport default function HTML({ raw }: { raw: string }) {\n  return (\n    <Box\n      variant='text.blogtext'\n      sx={{\n        img: { maxWidth: '100%', borderRadius: 2, maxHeight: 500 },\n      }}\n    >\n      <div dangerouslySetInnerHTML={{ __html: raw }} />\n    </Box>\n  )\n}\n","/** @jsx jsx */\nimport { Flex, Box, Text, jsx } from 'theme-ui'\nimport {\n  FaCalendar as DateIcon,\n  FaClock as TimeToReadIcon,\n  FaPencilAlt as WordCountIcon,\n} from 'react-icons/fa'\nimport { IconContext } from 'react-icons'\n\nconst Info = ({ children }) => (\n  <Flex sx={{ alignItems: 'center' }}>\n    {children.icon}\n    <Box sx={{ px: 2 }}>{children.info}</Box>\n  </Flex>\n)\n\nconst PostDate = ({ post }) => (\n  <Flex sx={{ color: 'gray', alignItems: 'center', flexWrap: 'wrap', pt: 2 }}>\n    <IconContext.Provider value={{ style: { verticalAlign: 'middle' } }}>\n      <Info>\n        {{\n          icon: <DateIcon />,\n          info: post.date,\n        }}\n      </Info>\n      <Info>\n        {{\n          icon: <WordCountIcon />,\n          info: `${post.wordCount} words`,\n        }}\n      </Info>\n      <Info>\n        {{\n          icon: <TimeToReadIcon />,\n          info: `${post.timeToRead} minutes`,\n        }}\n      </Info>\n    </IconContext.Provider>\n  </Flex>\n)\n\nexport default PostDate\n","import { GatsbyImage, getImage } from 'gatsby-plugin-image'\n\nconst PostHero = ({ post }) => (\n  <div>\n    {post?.image?.childImageSharp && (\n      <GatsbyImage\n        image={getImage(post.image)}\n        alt={post.imageAlt ? post.imageAlt : post.excerpt}\n      />\n    )}\n  </div>\n)\n\nexport default PostHero\n","import React from 'react'\nimport { Themed } from 'theme-ui'\n\nconst PostTitle = (props) => <Themed.h1 {...props} />\n\nexport default PostTitle\n","import { graphql } from 'gatsby'\nimport PostPage from '../components/post'\n\nexport default PostPage\n\nexport const pageQuery = graphql`\n  query PostById($id: String!, $maxWidth: Int) {\n    orgPost(id: { eq: $id }) {\n      title\n      category\n      excerpt\n      date(formatString: \"MMMM DD, YYYY\")\n      tags\n      html\n      slug\n      timeToRead\n      wordCount\n      image {\n        childImageSharp {\n          gatsbyImageData(width: $maxWidth)\n        }\n      }\n    }\n  }\n`\n","/** @jsx jsx */\nimport { Link } from 'gatsby'\nimport { Box, Container, Divider, Flex, jsx, Text } from 'theme-ui'\nimport Bio from './bio'\nimport HTML from './html'\nimport Layout from './layout'\nimport PostMeta from './post-meta'\nimport PostHero from './post-hero'\nimport PostShare from './post-share'\nimport PostTitle from './post-title'\nimport { FaTags as TagsIcon } from 'react-icons/fa'\nimport SEO from './seo'\nimport Tags from './tags'\n\nimport { getSrc } from \"gatsby-plugin-image\"\n\nexport default ({ data }) => {\n  const post = data.orgPost\n\n  return (\n    <Layout>\n      <SEO\n        title={post.title}\n        description={post.excerpt}\n        imageSource={getSrc(post.image)}\n        keywords={[post.category, ...(post.tags || [])]}\n      />\n      <Container variant=\"content\">\n        <main sx={{ flex: 1, pb: 4, mx: 'auto' }}>\n          <article>\n            <header sx={{ pb: 1 }}>\n              <PostHero post={post} />\n              <PostTitle>{post.title}</PostTitle>\n              <Flex sx={{ alignItems: 'center', mt: -4, mb: 3 }}>\n                <Box sx={{ pr: 3 }}>\n                  <PostMeta post={post} />\n                </Box>\n              </Flex>\n            </header>\n            <section>\n              <HTML raw={post.html} />\n            </section>\n          </article>\n        </main>\n        <Box>\n          <Flex sx={{ alignItems: 'center', justifyContent: 'flex-end' }}>\n            <TagsIcon sx={{ mr: 2 }} />\n            <Tags tags={post.tags} />\n          </Flex>\n          <Link to={`/${post.category}`}>\n            <Text sx={{ p: 2, textAlign: 'right' }}>\n              Read more stories about \"{post.category}\"\n            </Text>\n          </Link>\n          {/* <PostShare post={post} /> */}\n          <Divider />\n          <Bio />\n        </Box>\n      </Container>\n    </Layout>\n  )\n}\n"],"names":["width","avatar","useStaticQuery","G","image","getImage","alt","sx","borderRadius","borderWidth","borderStyle","borderColor","boxShadow","transition","transform","Fragment","href","social","useSiteMetadata","map","name","url","key","mx","bg","toLowerCase","size","getIcon","p","flex","justifyContent","flexDirection","HTML","raw","variant","img","maxWidth","maxHeight","dangerouslySetInnerHTML","__html","Info","children","alignItems","icon","px","info","post","color","flexWrap","pt","value","style","verticalAlign","date","wordCount","timeToRead","childImageSharp","imageAlt","excerpt","props","data","orgPost","title","description","imageSource","getSrc","keywords","category","tags","pb","mt","mb","pr","html","mr","to","textAlign"],"sourceRoot":""}